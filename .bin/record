#!/bin/sh

### dependencies
# slurp
# wf-recorder
# gdbus/libnotify
# wl-copy
# timeout

notify() {
    gdbus call -e -d "org.freedesktop.Notifications" \
        -o /org/freedesktop/Notifications \
        -m org.freedesktop.Notifications.Notify "" \
        $1 "" "$2" "$3" "[]" "{}" 2100 >/dev/null
}

die() {
    MSG=${1:-Bye}
    notify 69 "Error: $MSG"
    exit 2
}

getTargetDirectory() {
    echo ${XDG_RECORDINGS_DIR:-${XDG_PICTURES_DIR:-$HOME}}
}

help() {
    echo "record 1.0"
    echo 
    echo "USAGE:"
    echo "    record <SUBCOMMAND>"
    echo 
    echo "FLAGS:"
    echo "    -h, --help       Prints help information"   
    echo "    -n, --notify     Enable notifications"   
    echo "    -a, --audio      Record with audio"   
    echo "    -o, --output 	   Define output type"
    echo 
    echo "SUBCOMMANDS:"
    echo "    check       Verify if the required tools are installed"
}

check() {
    echo "Checking if required tools are installed. If something is missing, install it to your system and make it available in PATH..."
    check_command wf-recorder
    check_command slurp
    check_command wl-copy
    check_command notify-send
    check_command timeout
}

check_command() {
    COMMAND=$1
    if command -v "$COMMAND" > /dev/null 2>&1; then
        RESULT="OK"
    else
        RESULT="NOT FOUND"
    fi
    echo "   $COMMAND: $RESULT"
}

use_slurp() {
    GEOM=$(slurp -d)
    if [ -z "$GEOM" ]; then # Check if user exited slurp without selecting the area
        exit 0
    fi

    echo "$GEOM"
}

OUTPUT="default"
NOTIFY="false"
AUDIO="false"

OPTSTRING=":naoh"
while getopts ${OPTSTRING} arg; do
	case "${arg}" in
		notify|n)  NOTIFY="true";;
		audio|a) 	AUDIO="true";;
		output|o) 	   OUTPUT=$2;;
		help|h) 		    
			help
			exit;;
	    ?)
	    	echo "Invalid flag: -${OPTARG}."
	    	echo
	    	help
	    	exit;;
	esac
done

case $1 in
    check)         check;;
esac

# If an instance of wf-recorder is running under this user kill it with SIGINT and exit
pkill --euid "$USER" --signal SIGINT wf-recorder && exit

# timeout and exit after 10 minutes as user has almost certainly forgotten it's running

case "$OUTPUT" in
	gif) 	
		FILE="$(getTargetDirectory)/$(date +%s).gif"
		timeout 600 wf-recorder -f "$FILE" -c gif -F fps=30 -g "$(use_slurp)" || exit
		wl-copy --type image/gif < $FILE;; 
	mp4|default)
		FILE="$(getTargetDirectory)/$(date +%s).mp4"

		if [ "$AUDIO" = "true" ]; then
			timeout 600 wf-recorder -f "$FILE" -g "$(use_slurp)" -a || exit
		else 
			timeout 600 wf-recorder -f "$FILE" -g "$(use_slurp)" || exit
		fi
		
		wl-copy --type video/mp4 < $FILE;;	
	*) 	exit;;		
esac

if [ "$NOTIFY" = "true" ]; then 
	TITLE="Recording taken"
	MESSAGE="${FILE//"$HOME"/"~"}"
	notify 69 "$TITLE" "$MESSAGE"
fi

exit